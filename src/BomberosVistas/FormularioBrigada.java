/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package BomberosVistas;

import BomberoAcceesoDatos.BomberoData;
import BomberoAcceesoDatos.BrigadaData;
import BomberoAcceesoDatos.CuartelData;
import BomberoAcceesoDatos.SiniestrosData;
import BomberosEntidades.Bombero;
import BomberosEntidades.Cuartel;
import BomberosEntidades.Especialidad;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import BomberosEntidades.Brigada;
import BomberosEntidades.Siniestro;
import java.awt.Graphics;
import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.JPanel;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author pollo
 */
public class FormularioBrigada extends javax.swing.JInternalFrame {

    private Brigada brigadaActual = null;

    private BomberoData bomberodata = new BomberoData();
    private Bombero bomberoActual = null;
    private FormularioBrigada brigada;
    CuartelData cd = new CuartelData();
    List<Cuartel> listaCuartel = cd.listaCuarteles();
    private BrigadaData bData = new BrigadaData();
    DefaultTableModel modelo = new DefaultTableModel();
    List<Bombero> listarBomberos = bomberodata.listaBomberos();
    private List<BomberosEntidades.Brigada> listaBrigadas = bData.listarBrigadasLibres();
    DefaultComboBoxModel comboModelo = new DefaultComboBoxModel(listaCuartel.toArray());
    DefaultTableModel modelo2 = new DefaultTableModel();
    private SiniestrosData sn = new SiniestrosData();
    List<Siniestro> listarSiniestro = sn.listarSiniestroSinBrigada();
    List<BomberosEntidades.Brigada> brigadas = bData.listarBrigadasLibres();
    List<Siniestro> listarSiniestroTodos = sn.listarSiniestros();
    List<BomberosEntidades.Brigada> Todasbrigadas = bData.listarBrigadasAsignadas();
    FondoPanel fondo = new FondoPanel();

    /**
     * Creates new form Brigada
     */
    public FormularioBrigada() {
        ((javax.swing.plaf.basic.BasicInternalFrameUI) this.getUI()).setNorthPane(null);
        this.setContentPane(fondo);
        initComponents();
        armarTabla2();
        llenarTipo();
        ArmarTabla();
        llenarTablaSiniestro();
        llenarCuartel();
        llenarTabla();
        limpiarCampos();
    }

    //
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtNombre = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTBrigada = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jCtipo = new javax.swing.JComboBox<>();
        jcCuartel = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTSiniestro = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jModificar = new javax.swing.JButton();
        jAsignadaSiniestreo = new javax.swing.JRadioButton();
        jNoAsignadaSiniestro = new javax.swing.JRadioButton();
        jAsignadasBrigada = new javax.swing.JRadioButton();
        jNoasignadaBrigada = new javax.swing.JRadioButton();
        jEspecialidadFiltro = new javax.swing.JComboBox<>();
        jcCuartelFiltro = new javax.swing.JComboBox<>();
        jFiltrar = new javax.swing.JButton();
        jAsignar = new javax.swing.JButton();
        liompiarfasasdasd = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Yu Gothic Light", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Brigada");

        jLabel2.setFont(new java.awt.Font("Yu Gothic Light", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nombre: ");

        jLabel3.setFont(new java.awt.Font("Yu Gothic Light", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Especialida:");

        jLabel4.setFont(new java.awt.Font("Yu Gothic Light", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Cuartel: ");

        jtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtNombreActionPerformed(evt);
            }
        });

        jTBrigada.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTBrigada);

        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setText("Selecionar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setForeground(new java.awt.Color(0, 0, 0));
        jButton3.setText("Nuevo");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton5.setForeground(new java.awt.Color(0, 0, 0));
        jButton5.setText("Salir");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jCtipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCtipoActionPerformed(evt);
            }
        });

        jcCuartel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcCuartelActionPerformed(evt);
            }
        });

        jTSiniestro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTSiniestro);

        jLabel5.setFont(new java.awt.Font("Yu Gothic Light", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Siniestros");

        jModificar.setForeground(new java.awt.Color(0, 0, 0));
        jModificar.setText("Modificar");
        jModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jModificarActionPerformed(evt);
            }
        });

        jAsignadaSiniestreo.setFont(new java.awt.Font("Yu Gothic Light", 0, 14)); // NOI18N
        jAsignadaSiniestreo.setForeground(new java.awt.Color(255, 255, 255));
        jAsignadaSiniestreo.setText("Asignadas");
        jAsignadaSiniestreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAsignadaSiniestreoActionPerformed(evt);
            }
        });

        jNoAsignadaSiniestro.setFont(new java.awt.Font("Yu Gothic Light", 0, 14)); // NOI18N
        jNoAsignadaSiniestro.setForeground(new java.awt.Color(255, 255, 255));
        jNoAsignadaSiniestro.setText("No Asignadas");
        jNoAsignadaSiniestro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jNoAsignadaSiniestroActionPerformed(evt);
            }
        });

        jAsignadasBrigada.setFont(new java.awt.Font("Yu Gothic Light", 0, 14)); // NOI18N
        jAsignadasBrigada.setForeground(new java.awt.Color(255, 255, 255));
        jAsignadasBrigada.setText("Asignadas");
        jAsignadasBrigada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAsignadasBrigadaActionPerformed(evt);
            }
        });

        jNoasignadaBrigada.setFont(new java.awt.Font("Yu Gothic Light", 0, 14)); // NOI18N
        jNoasignadaBrigada.setForeground(new java.awt.Color(255, 255, 255));
        jNoasignadaBrigada.setText("No Asignadas");
        jNoasignadaBrigada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jNoasignadaBrigadaActionPerformed(evt);
            }
        });

        jEspecialidadFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jEspecialidadFiltroActionPerformed(evt);
            }
        });

        jFiltrar.setForeground(new java.awt.Color(0, 0, 0));
        jFiltrar.setText("Filtrar");
        jFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFiltrarActionPerformed(evt);
            }
        });

        jAsignar.setForeground(new java.awt.Color(0, 0, 0));
        jAsignar.setText("Asignar");
        jAsignar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAsignarActionPerformed(evt);
            }
        });

        liompiarfasasdasd.setForeground(new java.awt.Color(0, 0, 0));
        liompiarfasasdasd.setText("Limpiar");
        liompiarfasasdasd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                liompiarfasasdasdActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Yu Gothic Light", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Cuartel: ");

        jLabel10.setFont(new java.awt.Font("Yu Gothic Light", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Especialida:");

        jLabel8.setFont(new java.awt.Font("Yu Gothic Light", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("FILTROS");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(4, 4, 4)
                                .addComponent(jtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(9, 9, 9)
                                .addComponent(jCtipo, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(16, 16, 16)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(10, 10, 10)
                                .addComponent(jcCuartel, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(jButton3)
                                .addGap(25, 25, 25)
                                .addComponent(jModificar))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(102, 102, 102)
                                .addComponent(jLabel8))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(18, 18, 18)
                                .addComponent(jEspecialidadFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(31, 31, 31)
                                .addComponent(jcCuartelFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(liompiarfasasdasd)
                        .addGap(35, 35, 35)
                        .addComponent(jAsignar)
                        .addGap(28, 28, 28)
                        .addComponent(jFiltrar)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 522, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(245, 245, 245)
                                .addComponent(jAsignadaSiniestreo)
                                .addGap(3, 3, 3)
                                .addComponent(jNoAsignadaSiniestro))
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(393, 393, 393)
                                .addComponent(jNoasignadaBrigada))
                            .addComponent(jLabel5)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(270, 270, 270)
                                .addComponent(jAsignadasBrigada))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 522, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel1))
                    .addComponent(jNoasignadaBrigada)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(187, 187, 187)
                        .addComponent(jLabel5))
                    .addComponent(jAsignadasBrigada)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jAsignadaSiniestreo)
                                    .addComponent(jNoAsignadaSiniestro)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jCtipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton1))
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jcCuartel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(14, 14, 14)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton3)
                                    .addComponent(jModificar))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton5))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addComponent(jLabel10))
                                    .addComponent(jEspecialidadFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(19, 19, 19)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addComponent(jLabel9))
                                    .addComponent(jcCuartelFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(liompiarfasasdasd)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jAsignar)
                                        .addComponent(jFiltrar)))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:

        try {
            Cuartel cuartel;
            Brigada brigada;
            String nombre = jtNombre.getText();

            if (nombre.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Ingrese un nombre valido");

            } else if (bData.buscarBrigadaPorNombre(nombre) == null) {
                Especialidad esp = (Especialidad) jCtipo.getSelectedItem();
                cuartel = (Cuartel) jcCuartel.getSelectedItem();
                brigada = new Brigada(nombre, esp, cuartel);
                bData.agregarBrigada(brigada);

                limpiarCampos();

                JOptionPane.showMessageDialog(this, "La brigada '" + brigada + "' a sido guardada exitosamente.");
            } else {
                JOptionPane.showMessageDialog(this, "La brigada con este nombre: " + nombre + " ya existe");
            }
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "No debe haber campos vacios " + ex);
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jCtipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCtipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCtipoActionPerformed

    private void liompiarfasasdasdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_liompiarfasasdasdActionPerformed
        // TODO add your handling code here:
        limpiarCampos();

    }//GEN-LAST:event_liompiarfasasdasdActionPerformed

    private void jAsignarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAsignarActionPerformed

        // TODO add your handling code here:
        try {
            if (!jAsignadaSiniestreo.isSelected() && !jAsignadasBrigada.isSelected()) {

                int filaSeleccionada = jTSiniestro.getSelectedRow();
                int filaSeleccionada2 = jTBrigada.getSelectedRow();
                if (filaSeleccionada != -1 && filaSeleccionada2 != -1) {
                    Object codSiniestro = jTSiniestro.getValueAt(filaSeleccionada, 0);
                    Object codBrigada = jTBrigada.getValueAt(filaSeleccionada2, 0);
                    int CodS = Integer.parseInt(codSiniestro.toString());
                    int codB = Integer.parseInt(codBrigada.toString());
                    Brigada bd = bData.buscarBrigadaPorId(codB);
                    Siniestro siniestro = new Siniestro();

                    bData.asignarBrigadaSiniestro(bd.getCodBrigada());
                    siniestro.setCodigo(CodS);
                    sn.asignarBrigada(siniestro, bd);
                    limpiarCampos();
                } else {
                    JOptionPane.showMessageDialog(this, "Fila seleccionada invalida");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Seleccione la tabla de no asignados");

            }

        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Los datos tomados del sistema son incorrectos ");
        }
    }//GEN-LAST:event_jAsignarActionPerformed

    private void jEspecialidadFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jEspecialidadFiltroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jEspecialidadFiltroActionPerformed

    private void jcCuartelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcCuartelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcCuartelActionPerformed

    private void jFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFiltrarActionPerformed
        // TODO add your handling code here:

        modelo2.setRowCount(0);

        for (Siniestro aux : listarSiniestro) {
            if (aux.getTipoSiniestro().equals(jEspecialidadFiltro.getSelectedItem())) {
                String codigo = "No asignada";
                if (aux.getCodigoBrigada() != null) {
                    codigo = "" + aux.getCodigoBrigada().getCodBrigada() + "-" + aux.getCodigoBrigada().getNombreBrigada();
                }
                modelo2.addRow(new Object[]{aux.getCodigo(), aux.getFechaSiniestro(), aux.getTipoSiniestro(), codigo, aux.getDetalles()});
            }
        }
        modelo.setRowCount(0);
        for (Brigada aux : brigadas) {
            String nombre = "";
            for (Cuartel cuartel : listaCuartel) {
                if (cuartel.getCodCuartel() == aux.getNro_cuartel().getCodCuartel()) {
                    nombre = cuartel.getNombre();
                }
            }
            if (aux.getEspecialidad().equals(jEspecialidadFiltro.getSelectedItem())
                    && nombre.equalsIgnoreCase(jcCuartelFiltro.getSelectedItem().toString())) {
                modelo.addRow(new Object[]{aux.getCodBrigada(), aux.getNombreBrigada(), aux.getEspecialidad(), nombre});
            }
        }


    }//GEN-LAST:event_jFiltrarActionPerformed

    private void jModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jModificarActionPerformed

        try {
            String nombre = jtNombre.getText();
            Especialidad esp = (Especialidad) jCtipo.getSelectedItem();
            Cuartel cuartel = (Cuartel) jcCuartel.getSelectedItem();
            int filaSeleccionada2 = jTBrigada.getSelectedRow();
            if (filaSeleccionada2 != 1) {
                Object codBrigada = jTBrigada.getValueAt(filaSeleccionada2, 0);
                if (nombre.isEmpty() || esp == null || cuartel == null) {
                    JOptionPane.showMessageDialog(this, "Todos los campos deben estar llenos.");
                } else {
                    int codB = Integer.parseInt(codBrigada.toString());
                    Brigada brigada = new Brigada();
                    brigada.setNombreBrigada(nombre);
                    brigada.setCodBrigada(codB);
                    brigada.setEspecialidad(esp);
                    brigada.setNro_cuartel(cuartel);
                    bData.modificarBrigada(brigada);
                    llenarTabla();
                    limpiarCampos();
                }
            } else {
                JOptionPane.showMessageDialog(this, "Seleccione la fila de brigada a modificar");

            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error al modificar la brigada: " + ex.getMessage());
        }
    }//GEN-LAST:event_jModificarActionPerformed

    private void jAsignadaSiniestreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAsignadaSiniestreoActionPerformed
        // TODO add your handling code here:
        if (jAsignadaSiniestreo.isSelected() == true) {
            jNoAsignadaSiniestro.setSelected(false);
        }
        modelo2.setRowCount(0);

        listarSiniestroTodos = sn.listarSiniestros();
        for (Siniestro aux : listarSiniestroTodos) {
            String codigo = "No asignada";
            if (aux.getCodigoBrigada() != null) {
                codigo = "" + aux.getCodigoBrigada().getCodBrigada() + "-" + aux.getCodigoBrigada().getNombreBrigada();
                modelo2.addRow(new Object[]{aux.getCodigo(), aux.getFechaSiniestro(), aux.getTipoSiniestro(), codigo, aux.getDetalles()});
            }
        }
    }//GEN-LAST:event_jAsignadaSiniestreoActionPerformed

    private void jAsignadasBrigadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAsignadasBrigadaActionPerformed
        // TODO add your handling code here:

        if (jAsignadasBrigada.isSelected() == true) {
            jNoasignadaBrigada.setSelected(false);
        }
        modelo.setRowCount(0);
        for (Brigada aux : Todasbrigadas) {
            String nombre = "";
            String s = "";
            for (Siniestro siniestro1 : listarSiniestroTodos) {
                if (siniestro1.getCodigoBrigada() != null) {
                    if (siniestro1.getCodigoBrigada().equals(aux)) {
                        s = siniestro1.getCodigo() + "-" + siniestro1.getDetalles();
                    }
                }
            }
            for (Cuartel cuartel : listaCuartel) {
                if (cuartel.getCodCuartel() == aux.getNro_cuartel().getCodCuartel()) {
                    nombre = cuartel.getNombre();
                }
            }
            modelo.addRow(new Object[]{aux.getCodBrigada(), aux.getNombreBrigada(), aux.getEspecialidad(), nombre, s});
        }
        listarSiniestro = sn.listarSiniestroSinBrigada();
    }//GEN-LAST:event_jAsignadasBrigadaActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // Salir
        dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jNoasignadaBrigadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jNoasignadaBrigadaActionPerformed
        // TODO add your handling code here:
        if (jNoasignadaBrigada.isSelected() == true) {
            jAsignadasBrigada.setSelected(false);
        }
        llenarTabla();
    }//GEN-LAST:event_jNoasignadaBrigadaActionPerformed

    private void jNoAsignadaSiniestroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jNoAsignadaSiniestroActionPerformed
        // TODO add your handling code here:
        if (jNoAsignadaSiniestro.isSelected() == true) {
            jAsignadaSiniestreo.setSelected(false);
        }
        llenarTablaSiniestro();
    }//GEN-LAST:event_jNoAsignadaSiniestroActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int filaSeleccionada = jTBrigada.getSelectedRow();
        if (filaSeleccionada != -1) {
            Object IdBrigada = jTBrigada.getValueAt(filaSeleccionada, 0);
            if (IdBrigada != null) {
                int numero = Integer.parseInt(IdBrigada.toString());
                brigadaActual = bData.buscarBrigadaPorId(numero);
                if (brigadaActual != null) {
                    jtNombre.setText(brigadaActual.getNombreBrigada());
                    jCtipo.setSelectedItem(brigadaActual.getEspecialidad());

                    for (Cuartel cuartel : listaCuartel) {
                        if (cuartel.getCodCuartel() == brigadaActual.getNro_cuartel().getCodCuartel()) {
                            jcCuartel.setSelectedItem(cuartel);
                        }
                    }
//                        jDni.setText(bomberoActual.getDni());
//                        Jnombre.setText(bomberoActual.getNombre());
//                        JApellido.setText(bomberoActual.getApellido());
//                        jCelular.setText(bomberoActual.getCelular());
//                        jSangre.setSelectedItem(bomberoActual.getGrupSanguineo());
//                        jBrigadaAsignada.setSelectedItem(bomberoActual.getBrigada());
//                        jDCalendar.setDate(Date.from(bomberoActual.getFecha_nac().atStartOfDay(ZoneId.systemDefault()).toInstant()));
                } else {

                    JOptionPane.showMessageDialog(this, "Bombero no encontrado");
                }
            } else {
                JOptionPane.showMessageDialog(this, "El valor seleccionado es nulo");
            }
        } else {
            JOptionPane.showMessageDialog(this, "No se ha seleccionado ninguna fila");
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtNombreActionPerformed
    private void limpiarTabla() {
        int filas = modelo.getRowCount();
        for (int i = filas - 1; i >= 0; i--) {
            modelo.removeRow(i);
        }
    }

    private void limpiarTabla2() {
        int filas = modelo2.getRowCount();
        for (int i = filas - 1; i >= 0; i--) {
            modelo2.removeRow(i);
        }
    }

    private void limpiarCampos() {
        limpiarTabla();
        limpiarTabla2();
        llenarTabla();
        llenarTablaSiniestro();
        jAsignadaSiniestreo.setSelected(false);
        jAsignadasBrigada.setSelected(false);
        jNoAsignadaSiniestro.setSelected(true);
        jNoasignadaBrigada.setSelected(true);
        jtNombre.setText("");
        jCtipo.setSelectedIndex(0);
        jcCuartel.setSelectedIndex(0);
        jTBrigada.clearSelection();
        jTSiniestro.clearSelection();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton jAsignadaSiniestreo;
    private javax.swing.JRadioButton jAsignadasBrigada;
    private javax.swing.JButton jAsignar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<Especialidad> jCtipo;
    private javax.swing.JComboBox<Especialidad> jEspecialidadFiltro;
    private javax.swing.JButton jFiltrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton jModificar;
    private javax.swing.JRadioButton jNoAsignadaSiniestro;
    private javax.swing.JRadioButton jNoasignadaBrigada;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTBrigada;
    private javax.swing.JTable jTSiniestro;
    private javax.swing.JComboBox<Cuartel> jcCuartel;
    private javax.swing.JComboBox<Cuartel> jcCuartelFiltro;
    private javax.swing.JTextField jtNombre;
    private javax.swing.JButton liompiarfasasdasd;
    // End of variables declaration//GEN-END:variables
public void llenarTipo() {
        for (Especialidad tipo : Especialidad.values()) {
            jCtipo.addItem(tipo);
            jEspecialidadFiltro.addItem(tipo);
        }
    }

    public void llenarTablaSiniestro() {
        modelo2.setRowCount(0);
        listarSiniestro = sn.listarSiniestroSinBrigada();
        for (Siniestro aux : listarSiniestro) {
            String codigo = "No asignada";
            if (aux.getCodigoBrigada() != null) {
                codigo = "" + aux.getCodigoBrigada().getCodBrigada() + "-" + aux.getCodigoBrigada().getNombreBrigada();
            }
            modelo2.addRow(new Object[]{aux.getCodigo(), aux.getFechaSiniestro(), aux.getTipoSiniestro(), codigo, aux.getDetalles()});
        }
    }

    public void armarTabla2() {
        modelo2.addColumn("Codigo");
        modelo2.addColumn("Fecha");
        modelo2.addColumn("Tipo");
        modelo2.addColumn("CodBrigada");
        modelo2.addColumn("Detalles");
        jTSiniestro.setModel(modelo2);
    }

    private void ArmarTabla() {
        modelo.addColumn("Codigo");
        modelo.addColumn("Nombre");
        modelo.addColumn("Especialidad");
        modelo.addColumn("Cuartel");
        modelo.addColumn("Siniestro");

        jTBrigada.setModel(modelo);
    }

    public void llenarCuartel() {
        jcCuartel.setModel(comboModelo);
        jcCuartelFiltro.setModel(comboModelo);
    }

    private void llenarTabla() {

        modelo.setRowCount(0);
        brigadas = bData.listarBrigadas();
        for (Brigada aux : brigadas) {
            String nombre = "";
            String siniestro = "No asignado";
            for (Cuartel cuartel : listaCuartel) {
                if (cuartel.getCodCuartel() == aux.getNro_cuartel().getCodCuartel()) {
                    nombre = cuartel.getNombre();
                }
            }
            modelo.addRow(new Object[]{aux.getCodBrigada(), aux.getNombreBrigada(), aux.getEspecialidad(), nombre, siniestro});
        }

    }

    public class FondoPanel extends JPanel {

        private Image imagen;

        public void paint(Graphics g) {
            imagen = new ImageIcon(getClass().getResource("/imagen/degrade.jpg")).getImage();
            g.drawImage(imagen, 0, 0, getWidth(), getHeight(), this);
            setOpaque(false);
            super.paint(g);
        }

    }
}
